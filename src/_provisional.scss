/*
 *
 * Web Experience Toolkit (WET) / Boîte à outils de l'expérience Web (BOEW)
 * wet-boew.github.io/wet-boew/License-en.html / wet-boew.github.io/wet-boew/Licence-fr.html
 *
 */
/*
	Global Provisional styling

	- Provisional  CSSspecific for view port are defined in the "views/[view port]" theme CSS
*/

@mixin provisional-chckbxrdio-hover {
	background-image: linear-gradient(to bottom, hsl(10, 0%, 90%), hsl(10, 0%, 100%) 50%);
}

@mixin provisional-chckbxrdio-focus {
	box-shadow: 0 0 0 2px #000, 0 0 8px 4px rgb(59, 153, 252);
}

.provisional, .experimental {

	/* ------------
	 * Background color
	 *
	 */

	// PinkDay color
	.bg-pnkDy {
		background-color: #AD005F;

		&.well.header-rwd {
			background-color: #570030;
		}
	}

	/* ------------
	 * Background image for heading
	 *
	 */

	.bg-img-hdng {
		background-image: url("../assets/x-blue-line.png");
		background-position: right bottom;
		background-repeat: no-repeat;
		min-height: 60px;
		padding-bottom: 35px;
		padding-right: 80px;
	}


	/* ------------
	 * Theme color
	 *
	 */

	/* Pink day - One day event in April
	 * (with a contrast conforming to Level AAA)
	 */
	&.pnkDy-theme {

		// Page header and Menu
		.gcweb-menu button[aria-haspopup=true],
		#wb-srch button,
		.srchbox button {
			background-color: #AD005F;
			border-color:#AD005F;
		}
		.gcweb-menu button[aria-haspopup=true]:focus, .gcweb-menu button[aria-haspopup=true]:hover,
		#wb-srch button:focus, #wb-srch button:hover,
		.srchbox button:focus, .srchbox button:hover {
			background-color: #570030;
			color: #fff;
		}
		.gcweb-menu,
		.home .gcweb-menu {
			border-top-color: #AD005F;
		}

		// Home page Menu
		.home .gcweb-menu {
			button[aria-haspopup=true] {
				background-color: #ffffff;
				border-color:#ffffff;
			}
			button[aria-haspopup=true] {
				color: #AD005F;
			}
			button[aria-haspopup=true]:focus,
			button[aria-haspopup=true]:hover {
				background-color: #AD005F;
				border-color:#AD005F;
				color: #ffffff;
			}
		}

		// Footer
		#wb-info .landscape {
			background-color: #AD005F;
		}
	}

	/* Dark theme
	 */
	&.dark-theme {

		// Page header and Menu
		.gcweb-menu button[aria-haspopup=true],
		#wb-srch button,
		.srchbox button {
			background-color: #000;
			border-color: #000;
			color: #fff;
		}
		.gcweb-menu button[aria-haspopup=true]:focus, .gcweb-menu button[aria-haspopup=true]:hover,
		#wb-srch button:focus, #wb-srch button:hover,
		.srchbox button:focus, .srchbox button:hover {
			background-color: #000;
			color: #fff;
		}
		.gcweb-menu,
		.home .gcweb-menu {
			border-top-color: #000;
		}

		// Home page Menu
		.home .gcweb-menu {
			button[aria-haspopup=true] {
				background-color: #fff;
				border-color:#fff;
			}
			button[aria-haspopup=true] {
				color: #000;
			}
			button[aria-haspopup=true]:focus,
			button[aria-haspopup=true]:hover {
				background-color: #000;
				border-color:#000;
				color: #fff;
			}
		}

		// Footer
		#wb-info .landscape {
			background-color: #000;
			color: #fff;
		}
	}

}

/*Bootstrap replacement variables (overriding the originals might have unintended consequences)*/
$gcweb-padding-large-vertical: 15px;
$gcweb-padding-large-horizontal: 24px;

$gcweb-padding-base-vertical: 10px;
$gcweb-padding-base-horizontal: 16px;

$gcweb-padding-small-vertical: 6px;
$gcweb-padding-small-horizontal: 12px;

$gcweb-padding-xs-vertical: 1px;
$gcweb-padding-xs-horizontal: 6px;

$gcweb-font-size-large: 24px;
$gcweb-font-size-small: 16px;

$gcweb-line-height-computed: floor(($gcweb-font-size-base * $gcweb-line-height-base));
$gcweb-line-height-large: $gcweb-line-height-base;
$gcweb-line-height-small: $gcweb-line-height-base;

$gcweb-border-radius-large: 9px;
$gcweb-border-radius-base: 6px;
$gcweb-border-radius-small: 4px;

$gcweb-btn-border-radius-large: $gcweb-border-radius-large;
$gcweb-btn-border-radius-base: $gcweb-border-radius-base;
$gcweb-btn-border-radius-small: $gcweb-border-radius-small;


$gcweb-input-height-large: (ceil($gcweb-font-size-large * $gcweb-line-height-large) + ($gcweb-padding-large-vertical * 2) + 2);

$gcweb-input-height-base: ($gcweb-line-height-computed + ($gcweb-padding-base-vertical * 2) + 2);
//NEED TO FORCEFULLY OVERRIDE SELECTORS ASSOCIATED TO THIS at several spots since GCWeb has set a tiny px override for the original variable!!!!

$gcweb-input-height-small: (floor($gcweb-font-size-small * $gcweb-line-height-small) + ($gcweb-padding-small-vertical * 2) + 2);


$gcweb-input-border-radius-large: $gcweb-border-radius-large;
$gcweb-input-border-radius-small: $gcweb-border-radius-small;






/*Force normal line heights... needed because GCWeb is setting the real $gcweb-input-height-base variable to an artificially small height (37px)*/
.provisional.force-style-gcweb-latest {
	/*.form-control {
		//height: $gcweb-input-height-base;
		//ISSUE: Causes textareas to become 1 line (norm in WET/GCWeb is auto height - about 3 lines)... omitting this doesn't appear to break anything
	}*/

	.form-control-feedback {
		width: $gcweb-input-height-base;
		height: $gcweb-input-height-base;
		line-height: $gcweb-input-height-base;
	}

	.has-feedback {
		.form-control {
			padding-right: ($gcweb-input-height-base * 1.25);
		}

		label {
			& ~ .form-control-feedback {
				top: ($gcweb-line-height-computed + 5);
			}
			&.sr-only {
				~ .form-control-feedback {
					top: 0;
				}
			}
		}
	}

	.form-inline {
		.has-feedback {
			.form-control-feedback {
				top: 0;
			}
		}
	}
}

@media screen and (-webkit-min-device-pixel-ratio: 0) {
	.provisional.force-style-gcweb-latest {
		input[type="date"],
		input[type="time"],
		input[type="datetime-local"],
		input[type="month"] {
			&.form-control {
				line-height: $gcweb-input-height-base;
			}

			&.input-sm,
			.input-group-sm & {
				line-height: $input-height-small; //gotta adjust this
			}

			&.input-lg,
			.input-group-lg & {
				line-height: $input-height-large; //gotta adjust this
			}
		}
	}
}





%gcweb-form-control-size {
	@extend %gcweb-default-font-size;
	padding: $gcweb-padding-base-vertical $gcweb-padding-base-horizontal;
}

/*NOTE: These mixins can be scrapped once the provisional form styles graduate OR if the ".provisional.*" selectors are scrapped... the mixins can't be substitued with placeholder selectors*/
@mixin gcweb-input-lg( $parent: '' ) {
	@include input-size( $parent + '.input-lg', $gcweb-input-height-large, $gcweb-padding-large-vertical, $gcweb-padding-large-horizontal, $gcweb-font-size-large, $gcweb-line-height-large, $gcweb-input-border-radius-large );
}

@mixin gcweb-input-sm( $parent: '' ) {
	@include input-size( $parent '' + '.input-sm', $gcweb-input-height-small, $gcweb-padding-small-vertical, $gcweb-padding-small-horizontal, $gcweb-font-size-small, $gcweb-line-height-small, $gcweb-input-border-radius-small );
}

%gcweb-btn-size {
	@include button-size( $gcweb-padding-base-vertical, $gcweb-padding-base-horizontal, $gcweb-font-size-base, $gcweb-line-height-base, $gcweb-btn-border-radius-base );
}

%gcweb-btn-lg-size {
	@include button-size( $gcweb-padding-large-vertical, $gcweb-padding-large-horizontal, $gcweb-font-size-large, $gcweb-line-height-large, $gcweb-btn-border-radius-large );
}

%gcweb-btn-sm-size {
	@include button-size( $gcweb-padding-small-vertical, $gcweb-padding-small-horizontal, $gcweb-font-size-small, $gcweb-line-height-small, $gcweb-btn-border-radius-small );
}

%gcweb-btn-xs-size {
	@include button-size( $gcweb-padding-xs-vertical, $gcweb-padding-xs-horizontal, $gcweb-font-size-small, $gcweb-line-height-small, $gcweb-btn-border-radius-small );
}

%gcweb-radio-checkbox-margin-top {
	margin-top: 11px;
	/*TODO: Might clash with #1682... need to look into it further.*/
}

%gcweb-btn-call-to-action-margin {
	margin: 0;
}

%gcweb-form-goodies {
	@include gcweb-input-lg();
	@include gcweb-input-sm();

	form,
	.checkbox,
	.checkbox-inline,
	.radio,
	.radio-inline {
		@extend %gcweb-default-font-size;
	}

	.form-control {
		@extend %gcweb-form-control-size;
	}

	.btn {
		@extend %gcweb-btn-size;
	}

	.btn-lg,
	.btn-group-lg > .btn {
		@extend %gcweb-btn-lg-size;
	}

	.btn-sm,
	.btn-group-sm > .btn {
		@extend %gcweb-btn-sm-size;
	}

	.btn-xs,
	.btn-group-xs > .btn {
		@extend %gcweb-btn-xs-size;
	}

	.btn-primary,
	.btn-success,
	.btn-info,
	.btn-danger {
		@extend %gcweb-btn-text-shadow;
	}

	.btn-call-to-action {
		@extend %gcweb-btn-call-to-action-margin;
	}

	/*Make generic legends look giant by GCWeb's standards (like WET/Bootstrap)*/
	legend {
		font-size: ($gcweb-font-size-base * 1.5);
		margin-bottom: $gcweb-line-height-computed;
	}

	/*Make legends that are used with legends/radio buttons use GCWeb's baseline font size (need this override because otherwise it'd default to WET's default font size)*/
	fieldset {
		&.chkbxrdio-grp {
			legend {
				font-size: $gcweb-font-size-base;
				margin-bottom: 5px; //Remove this line when no longer provisional (WET's CSS already declares it... why do I need this if WET already does it?)
				/*TODO: Should only font-size and margin-bottom be declared here? https://github.com/twbs/bootstrap-sass/blob/b34765d8a6aa775816c59012b2d6b30c4c66a8e9/assets/stylesheets/bootstrap/_forms.scss#L26 shows that Bootstrap itself uses line-height: inherit and I don't think anything ever tries to override the default line height for legends (apart from _default setting 1.65 as the legend line height for some reason).*/
			}
		}
	}

	.radio input[type="radio"],
	.radio-inline input[type="radio"],
	.checkbox input[type="checkbox"],
	.checkbox-inline input[type="checkbox"] {
		@extend %gcweb-radio-checkbox-margin-top;
	}

	/*
	TODOS:
	-Are clickable area minimum sizes WCAG 2.x-compliant?
	-Rename %gcweb-form-goodies to something better
	-Should the font size of form elements (e.g. <input>, <textarea>, etc...) be increased as a part of this PR?
	-Try to avoid clashing with checkbox size PR (#1682)
	-Come up with a better class name? Maybe gc-font-new?
	-CHALLENGE: This part of Bootstrap extends some of .btn-lg's properties in a way that makes &.provisional classes inelegant to use. Would be good if "provisional.input-group-lg" could be used. See this for BS' SASS: https://github.com/twbs/bootstrap-sass/blob/b34765d8a6aa775816c59012b2d6b30c4c66a8e9/assets/stylesheets/bootstrap/_input-groups.scss#L39-L53
	-Add @jkshapiro as a co-author?

	NOTES:
	-Goal is to support these kinds of structures:
		-<form class="provisional">
		-<div class="provisional force-style-gcweb-latest">
		-<div class="provisional force-style-gcweb-latest"><form>
		-<button class="provisional btn">
	-Extra goal is to force call to action class to behave more like standard button classes (i.e. just a colour variation)
	-Decided against including an undo class (e.g. "force-style-gcweb-old")... overcomplicates things way too much and its implementation would probably need to change once the new form styles advance beyond a provisional state
	-Unitless line-height variables have replaced some properties that used unit-based values... the fact that they're unitless might cause some out-of-scope changes, but it's technically better not to use ems for line-height according to https://developer.mozilla.org/en-US/docs/Web/CSS/line-height#prefer_unitless_numbers_for_line-height_values
	-Some line heights are marginally different due to unitless values being used (see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height#prefer_unitless_numbers_for_line-height_values for why)
	*/
}

/*Allow the "force-style-gcweb-latest" class to be placed directly on a <form> element. Can't do it via %gcweb-form-goodies.*/
form {
	&.provisional {
		@extend %gcweb-default-font-size;
		@extend %gcweb-form-goodies;
	}
}

.provisional {
	/* Force form elements to always use GCWeb's latest font styles
	 * Note: This is an evergreen class. Its styles will change to adapt to any future GCWeb font updates.
	 */

	@at-root {
		@include gcweb-input-lg('.provisional');
		@include gcweb-input-sm('.provisional');
	}

	&.force-style-gcweb-latest {
		@extend %gcweb-form-goodies;
	}

	&.form-control {
		@extend %gcweb-form-control-size;
	}

	&.btn {
		@extend %gcweb-btn-size;
	}

	&.btn-lg,
	&.btn-group-lg > .btn {
		@extend %gcweb-btn-lg-size;
	}

	&.btn-sm,
	&.btn-group-sm > .btn {
		@extend %gcweb-btn-sm-size;
	}

	&.btn-xs,
	&.btn-group-xs > .btn {
		@extend %gcweb-btn-xs-size;
	}

	&.btn-call-to-action {
		@extend %gcweb-btn-call-to-action-margin;
	}

	&.radio input[type="radio"],
	&.radio-inline input[type="radio"],
	&.checkbox input[type="checkbox"],
	&.checkbox-inline input[type="checkbox"] {
		@extend %gcweb-radio-checkbox-margin-top;
	}

	//This color will eventually be replaced by the new colors from the alert revamp PR.
	&.icon-warning-light, .icon-warning-light {
		color: #DF7200;
	}

	&.gc-chckbxrdio {

		label {
			cursor: pointer;
			display: block;
			font-size: 20px;
		}

		legend {
			float: none;
			font-size: 22px;
			font-weight: 700;
			margin-bottom: 15px;
			margin-top: 0;
		}

		input[type="radio"],
		input[type="checkbox"] {
			border: 0;
			clip: rect(0 0 0 0);
			height: 1px;
			margin: -1px;
			overflow: hidden;
			padding: 0;
			position: absolute;
			width: 1px;

			&[disabled] + label {
				cursor: not-allowed;
				opacity: .5;
			}

			+ {
				label {
					display: inline-block;
					line-height: 2;
					margin-left: 36px;
					width: auto;
				}

				label::before {
					border: 4px solid #fff;
					box-shadow: 0 0 0 2px #000;
					content: "";
					display: inline-block;
					height: 36px;
					left: 0;
					position: absolute;
					top: 2px;
					width: 36px;
				}

				label:hover::before {
					@include provisional-chckbxrdio-hover;
				}
			}

			&:focus + label::before {
				@include provisional-chckbxrdio-focus;
			}
		}

		input[type="radio"] {

			+ {
				label::before {
					border-radius: 50%;
				}
			}

			&:checked + {

				label::before {
					background: #444;
				}
			}
		}

		&.checkbox {

			input[type="checkbox"] {

				+ label,
				+ label + ul {
					font-size: 17px;
					min-height: 23px;
				}

				+ label::before {
					height: 24px;
					left: 6px;
					top: 4px;
					width: 24px;
				}

				&:checked + label::after {
					border-width: 0 3px 3px 0;
					height: 16px;
					left: 14px;
					top: 6px;
					width: 9px;
				}
			}
		}

		input[type="checkbox"] {

			&:checked + label::after {
				border-color: #333;
				border-style: solid;
				border-width: 0 5px 5px 0;
				content: "";
				display: inline-block;
				height: 26px;
				left: 12px;
				position: absolute;
				top: 4px;
				transform: rotate(45deg);
				width: 13px;
			}
		}

		&.form-inline .label-inline {
			padding-right: 20px;

			label {
				padding-left: 10px;
			}
		}
	}

	/* Theme/topic decorative image */
	&.gc-topic-bg div {
		background: no-repeat;
		margin-left: -15px;
		min-height: 200px;
		overflow: hidden;
		width: 50vw;
	}

	/* Contributors */
	&.gc-contributors {
		margin-top: 38px;

		h2, ul {
			display: inline;
			font-size: $small-size;
			margin-top: 0;
		}

		ul {
			padding-inline-start: 0;

			li {
				display: inline-block;
				font-weight: $bold-weight;
				margin-right: .7em;
			}
		}
	}
}

// Provisional CSS for the chat wizard
@import "src/plugins/chatwizard/base";

// Provisional CSS for GC subway map menu
@import "src/plugins/gc-subway/base";
