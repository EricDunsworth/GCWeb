/*
 *
 * Web Experience Toolkit (WET) / Boîte à outils de l'expérience Web (BOEW)
 * wet-boew.github.io/wet-boew/License-en.html / wet-boew.github.io/wet-boew/Licence-fr.html
 *
 */
/*
	Global Provisional styling

	- Provisional  CSSspecific for view port are defined in the "views/[view port]" theme CSS
*/

@mixin provisional-chckbxrdio-hover {
	background-image: linear-gradient(to bottom, hsl(10, 0%, 90%), hsl(10, 0%, 100%) 50%);
}

@mixin provisional-chckbxrdio-focus {
	box-shadow: 0 0 0 2px #000, 0 0 8px 4px rgb(59, 153, 252);
}

.provisional, .experimental {

	/* ------------
	 * Background color
	 *
	 */

	// PinkDay color
	.bg-pnkDy {
		background-color: #AD005F;

		&.well.header-rwd {
			background-color: #570030;
		}
	}

	/* ------------
	 * Background image for heading
	 *
	 */

	.bg-img-hdng {
		background-image: url("../assets/x-blue-line.png");
		background-position: right bottom;
		background-repeat: no-repeat;
		min-height: 60px;
		padding-bottom: 35px;
		padding-right: 80px;
	}


	/* ------------
	 * Theme color
	 *
	 */

	/* Pink day - One day event in April
	 * (with a contrast conforming to Level AAA)
	 */
	&.pnkDy-theme {

		// Page header and Menu
		.gcweb-menu button[aria-haspopup=true],
		#wb-srch button,
		.srchbox button {
			background-color: #AD005F;
			border-color:#AD005F;
		}
		.gcweb-menu button[aria-haspopup=true]:focus, .gcweb-menu button[aria-haspopup=true]:hover,
		#wb-srch button:focus, #wb-srch button:hover,
		.srchbox button:focus, .srchbox button:hover {
			background-color: #570030;
			color: #fff;
		}
		.gcweb-menu,
		.home .gcweb-menu {
			border-top-color: #AD005F;
		}

		// Home page Menu
		.home .gcweb-menu {
			button[aria-haspopup=true] {
				background-color: #ffffff;
				border-color:#ffffff;
			}
			button[aria-haspopup=true] {
				color: #AD005F;
			}
			button[aria-haspopup=true]:focus,
			button[aria-haspopup=true]:hover {
				background-color: #AD005F;
				border-color:#AD005F;
				color: #ffffff;
			}
		}

		// Footer
		#wb-info .landscape {
			background-color: #AD005F;
		}
	}

	/* Dark theme
	 */
	&.dark-theme {

		// Page header and Menu
		.gcweb-menu button[aria-haspopup=true],
		#wb-srch button,
		.srchbox button {
			background-color: #000;
			border-color: #000;
			color: #fff;
		}
		.gcweb-menu button[aria-haspopup=true]:focus, .gcweb-menu button[aria-haspopup=true]:hover,
		#wb-srch button:focus, #wb-srch button:hover,
		.srchbox button:focus, .srchbox button:hover {
			background-color: #000;
			color: #fff;
		}
		.gcweb-menu,
		.home .gcweb-menu {
			border-top-color: #000;
		}

		// Home page Menu
		.home .gcweb-menu {
			button[aria-haspopup=true] {
				background-color: #fff;
				border-color:#fff;
			}
			button[aria-haspopup=true] {
				color: #000;
			}
			button[aria-haspopup=true]:focus,
			button[aria-haspopup=true]:hover {
				background-color: #000;
				border-color:#000;
				color: #fff;
			}
		}

		// Footer
		#wb-info .landscape {
			background-color: #000;
			color: #fff;
		}
	}

}

/*This is a rehash of another selector... the point of it is to allow the "force-style-gcweb-latest" class to be placed directly on a <form> element. Can't do it more elegantly since elements can't come after classes in selector rules.*/
form {
	&.provisional {
		&.force-style-gcweb-latest {
			@extend %gcweb-default-font-size;
			color: green;
		}
	}
}

.provisional {
	//This color will eventually be replaced by the new colors from the alert revamp PR.
	&.icon-warning-light, .icon-warning-light {
		color: #DF7200;
	}

	/* Force form elements to always use GCWeb's latest font styles
	 * Note: This is an evergreen class. Its styles will change to adapt to any future GCWeb font updates.
	 */
	&.force-style-gcweb-latest {
		form,
		.checkbox,
		.checkbox-inline,
		.radio,
		.radio-inline,
		.btn:not(.btn-call-to-action) {
			@extend %gcweb-default-font-size;
		}

		&.btn:not(.btn-call-to-action), &.form-control,
		.btn:not(.btn-call-to-action), .form-control {
			padding: 6px 12px;
			/*TODO: This conflicts with the below selector that's based on the call to action button's paddinge*/
		}

		/*Ripoff of call to action button properties to use as baseline for normal buttons*/
		&.btn:not(.btn-call-to-action),
		.btn:not(.btn-call-to-action) {
			@extend %gcweb-btn-size;
		}

		&.btn-lg:not(.btn-call-to-action), &.btn-group-lg > .btn:not(.btn-call-to-action),
		.btn-lg:not(.btn-call-to-action), .btn-group-lg > .btn:not(.btn-call-to-action) {
			font-size: 1.4em;
			padding: .58em 1.15em;
		}

		&.btn-sm:not(.btn-call-to-action), &.btn-group-sm > .btn:not(.btn-call-to-action),
		.btn-sm:not(.btn-call-to-action), .btn-group-sm > .btn:not(.btn-call-to-action) {
			font-size: .9em;
			padding: .29em .715em;
		}

		&.btn-xs:not(.btn-call-to-action), &.btn-group-xs > .btn:not(.btn-call-to-action),
		.btn-xs:not(.btn-call-to-action), .btn-group-xs > .btn:not(.btn-call-to-action) {
			font-size: .8em;
			padding: .058em .3575em;
		}

		&.btn-primary, .btn-primary,
		&.btn-success, .btn-success,
		&.btn-info, .btn-info,
		&.btn-danger, .btn-danger {
			@extend %gcweb-btn-text-shadow;
		}

		/*Bonus selector to help make call to action buttons function more like standard button colour classes (for anyone that wants to transition to a more conventional way)*/
		/*TODO: Not sure if it's even worth keeping call to action buttons at all... its green colour is very similar to success buttons*/
		&.btn-call-to-action,
		.btn-call-to-action {
			padding: 0;
		}

		fieldset {
			&.chkbxrdio-grp {
				legend {
					font-size: inherit;
				}
			}
		}

		&.radio input[type="radio"], .radio input[type="radio"],
		&.radio-inline input[type="radio"], .radio-inline input[type="radio"],
		&.checkbox input[type="checkbox"], .checkbox input[type="checkbox"],
		&.checkbox-inline input[type="checkbox"], .checkbox-inline input[type="checkbox"] {
			margin-top: 11px;
			/*TODO: Might clash with #1682... need to look into it further.*/
		}

		/*
		TODOS:
		-Could any mixins or placeholder selectors from Bootstrap's SCSS be leveraged for provisional button styles?
		-Come up with a better class name?
		-Use consistent line breaks in selector rules (e.g. placing each rule on its own line)
		-Determine whether to base button font sizes and padding on pixels or pixels (call to action uses em, Bootstrap/WET use pixels)
		-Rework this into two setups: the provisional styles and an opposite "current" class (for anyone that wants to force a tiny font size)
		-Get rid of the need for having to use ":not(.btn-call-to-action)" everywhere
		-Try to avoid clashing with checkbox size PR (#1682)
		-Should the font size of form elements (e.g. <input>, <textarea>, etc...) be increased as a part of this PR?
		-Default legend's font and bottom margin aren't changing when using latest styles
		-Add @jkshapiro as a co-author?
		*/
	}

	&.gc-chckbxrdio {

		label {
			cursor: pointer;
			display: block;
			font-size: 20px;
		}

		legend {
			float: none;
			font-size: 22px;
			font-weight: 700;
			margin-bottom: 15px;
			margin-top: 0;
		}

		input[type="radio"],
		input[type="checkbox"] {
			border: 0;
			clip: rect(0 0 0 0);
			height: 1px;
			margin: -1px;
			overflow: hidden;
			padding: 0;
			position: absolute;
			width: 1px;

			&[disabled] + label {
				cursor: not-allowed;
				opacity: .5;
			}

			+ {
				label {
					display: inline-block;
					line-height: 2;
					margin-left: 36px;
					width: auto;
				}

				label::before {
					border: 4px solid #fff;
					box-shadow: 0 0 0 2px #000;
					content: "";
					display: inline-block;
					height: 36px;
					left: 0;
					position: absolute;
					top: 2px;
					width: 36px;
				}

				label:hover::before {
					@include provisional-chckbxrdio-hover;
				}
			}

			&:focus + label::before {
				@include provisional-chckbxrdio-focus;
			}
		}

		input[type="radio"] {

			+ {
				label::before {
					border-radius: 50%;
				}
			}

			&:checked + {

				label::before {
					background: #444;
				}
			}
		}

		&.checkbox {

			input[type="checkbox"] {

				+ label,
				+ label + ul {
					font-size: 17px;
					min-height: 23px;
				}

				+ label::before {
					height: 24px;
					left: 6px;
					top: 4px;
					width: 24px;
				}

				&:checked + label::after {
					border-width: 0 3px 3px 0;
					height: 16px;
					left: 14px;
					top: 6px;
					width: 9px;
				}
			}
		}

		input[type="checkbox"] {

			&:checked + label::after {
				border-color: #333;
				border-style: solid;
				border-width: 0 5px 5px 0;
				content: "";
				display: inline-block;
				height: 26px;
				left: 12px;
				position: absolute;
				top: 4px;
				transform: rotate(45deg);
				width: 13px;
			}
		}

		&.form-inline .label-inline {
			padding-right: 20px;

			label {
				padding-left: 10px;
			}
		}
	}

	/* Theme/topic decorative image */
	&.gc-topic-bg div {
		background: no-repeat;
		margin-left: -15px;
		min-height: 200px;
		overflow: hidden;
		width: 50vw;
	}

	/* Contributors */
	&.gc-contributors {
		margin-top: 38px;

		h2, ul {
			display: inline;
			font-size: $small-size;
			margin-top: 0;
		}

		ul {
			padding-inline-start: 0;

			li {
				display: inline-block;
				font-weight: $bold-weight;
				margin-right: .7em;
			}
		}
	}
}

// Provisional CSS for the chat wizard
@import "src/plugins/chatwizard/base";

// Provisional CSS for GC subway map menu
@import "src/plugins/gc-subway/base";
